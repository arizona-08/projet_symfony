{% extends 'index.html.twig' %}

{% block title %}Créer une configuration{% endblock %}

{% block main %}
<section class="max-w-8xl m-auto px-3 py-12">
    <div class="mb-10 text-center">
        <h1 class="text-4xl font-bold text-gray-800">Créer une configuration</h1>
        <p class="text-lg text-gray-600 mt-3">Veuillez renseigner les informations pour ajouter une nouvelle configuration.</p>
    </div>

    <div class="bg-white shadow-md rounded-lg p-6">
        {{ form_start(form, {'attr': {'class': 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-6 mb-6'}}) }}

        <div>
            <label for="vehicle" class="block text-sm font-medium text-gray-700 mb-2">Véhicule :</label>
            {{ form_widget(form.vehicle, {
                'attr': {
                    'class': 'w-full px-4 py-2 border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'
                }
            }) }}
        </div>

        <div>
            <label for="kit" class="block text-sm font-medium text-gray-700 mb-2">Kit :</label>
            {{ form_widget(form.kit, {
                'attr': {
                    'class': 'w-full px-4 py-2 border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500'
                }
            }) }}
        </div>

        <div id="kit_accessories" class="sm:col-span-2 lg:col-span-2">
            <p class="text-gray-600 text-sm">Les accessoires du kit sélectionné s'afficheront ici.</p>
        </div>

        <div class="flex justify-end sm:col-span-2 lg:col-span-2">
            <a href="{{ path('config_index') }}" class="px-4 py-2 bg-red-500 text-white rounded-md shadow-md hover:bg-red-600 mr-4">
                Annuler
            </a>
            <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md shadow-md hover:bg-blue-700">
                Créer la configuration
            </button>
        </div>

        {{ form_end(form) }}
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const kitSelect = document.querySelector('select[name="config[kit]"]');
        const accessoriesContainer = document.querySelector('#kit_accessories');

        const loadAccessories = (kitId) => {
            if (!kitId) {
                accessoriesContainer.innerHTML = '<p class="text-gray-600 text-sm">Les accessoires du kit sélectionné s\'afficheront ici.</p>';
                return;
            }

            fetch(`/config/get-kit-accessories?kit=${encodeURIComponent(kitId)}`)
                .then(response => response.json())
                .then(data => {
                    accessoriesContainer.innerHTML = '';

                    if (data.length === 0) {
                        accessoriesContainer.innerHTML = '<p class="text-gray-600 text-sm">Aucun accessoire trouvé pour le kit sélectionné.</p>';
                        return;
                    }

                    const ul = document.createElement('ul');
                    ul.className = 'list-disc list-inside text-gray-700';
                    data.forEach(accessory => {
                        const li = document.createElement('li');
                        li.textContent = accessory.name;
                        ul.appendChild(li);
                    });
                    accessoriesContainer.appendChild(ul);
                })
                .catch(() => {
                    accessoriesContainer.innerHTML = '<p class="text-red-600 text-sm">Erreur lors du chargement des accessoires. Veuillez réessayer.</p>';
                });
        };

        loadAccessories(kitSelect.value);
        kitSelect.addEventListener('change', () => {
            loadAccessories(kitSelect.value);
        });
    });
</script>
{% endblock %}
